{
  "Id": "89d7da13-86a0-4fde-89c2-6b110f763238",
  "Name": "Shop Item Inspection",
  "Description": "This script will inspect all of the items of a keyword in a shop and track the quality of those items as well as the position of the item so that you can easily purchase it.",
  "Author": "Rhien",
  "GameAddress": "dsl-mud.org",
  "Category": "Info and Alerts",
  "Version": 4,
  "MinimumClientVersion": "2021.6.5.1",
  "AliasList": [
    {
      "AliasExpression": "shop-inspect",
      "Command": "-- Syntax: shop-inspect <start index> <end index> <keyword>\r\nlocal argStart = getarg(1, ...)\r\nlocal argEnd = getarg(2, ...)\r\nlocal keyword = getarg(3, ...)\r\nlocal keywordTwo = getarg(4, ...)\r\n\r\nif argStart == \"\" then\r\n\tlua:Echo(\"shop-inspect <start index> <end index> <keyword>\")\r\n\tdo return end\r\nend\r\n\r\n-- The triggers for these only run when the inspection is happening so they save\r\n-- having to be processed all of the time.\r\nlua:EnableGroup(\"Inspect\")\r\n\r\n-- Reset the counter\r\nglobal.inspect_counter = 0\r\nglobal.inspect_results = { }\r\nglobal.inspect_results[95] = \"\"\r\nglobal.inspect_results[96] = \"\"\r\nglobal.inspect_results[97] = \"\"\r\nglobal.inspect_results[98] = \"\"\r\nglobal.inspect_results[99] = \"\"\r\nglobal.inspect_results[100] = \"\"\r\n\r\nif keywordTwo ~= \"\" then\r\n\tkeyword = keyword .. \" \" .. keywordTwo\r\nend\r\n\r\n-- Loop through all of the items requested.\r\nfor i = tonumber(artStart), tonumber(artEnd), 1 \r\ndo\r\n\t-- The global will allow us to echo what number the item is\r\n\t-- when the trigger hits\r\n\tglobal.inspect_counter = i\r\n\t\r\n\t-- Send the inspect command to the game\r\n    lua:Send(\"inspect \" .. i .. \".\" .. keyword)\r\n    \r\n    -- Important, we pause for a half a second, this is important because the game\r\n    -- has to respond so we can echo to the terminal if there is a match and what\r\n    -- index that match was (so the person can buy that specific item).  Increase\r\n    -- this number on laggy connections or if they're not getting the data back from\r\n    -- the mud in time.\r\n    lua:Sleep(750)\r\nend\r\n\r\n-- Display the output of the results of what the trigger collected.\r\nlua:Echo(\"\")\r\nlua:Echo(\"Inspection Results for \" .. keyword .. \" at \" .. lua:GetVariable(\"Room\"))\r\nlua:Echo(\"-------------------------------------------------------------------\")\r\n\r\nfor i = 100, 95, -1\r\ndo\r\n\tlua:Echo(i .. \"%\")\r\n\tlua:Echo(lua:TrimEnd(lua:Coalesce(global.inspect_results[i], \"None\"), \",\"))\r\n\tlua:Echo(\"\")\r\nend\r\n\r\n-- Cleanup the results.\r\nglobal.inspect_results = { }\r\n\r\n-- Disable the inspection trigger so it doesn't fire on a regular basis\r\nlua:DisableGroup(\"Inspect\")",
      "Enabled": true,
      "Character": "",
      "Group": "",
      "IsLua": true,
      "ExecuteAs": 1,
      "Lock": false,
      "Count": 0,
      "PackageId": ""
    }
  ],
  "TriggerList": [
    {
      "Command": "local argOne = getarg(1, ...)\r\nlocal index = tonumber(argOne)\r\n\r\nglobal.inspect_results[index] = global.inspect_results[index] .. global.inspect_counter .. \",\"\r\n\r\n-- Echo the number we're on above the item.\r\nlua:EchoEvent(\"#\" .. global.inspect_counter .. \" is \" .. argOne .. \"%\")",
      "Pattern": "Condition: excellent \\((95|96|97|98|99|100)%\\)",
      "Character": "",
      "Group": "Inspect",
      "IsSilent": false,
      "IsLua": true,
      "ExecuteAs": 1,
      "Plugin": false,
      "DisableAfterTriggered": false,
      "Lock": false,
      "LastMatched": "0001-01-01T00:00:00",
      "VariableReplacement": false,
      "Enabled": false,
      "Gag": false,
      "MoveTo": 0,
      "HighlightLine": false,
      "Count": 0,
      "Priority": 10000,
      "StopProcessing": false,
      "Identifier": "1317e74b-66e0-41ac-bfbb-0481416819f9",
      "PackageId": "",
      "SystemTrigger": false
    }
  ],
  "DirectionList": []
}