<UserControl x:Class="Avalon.Controls.VariableList"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Avalon.Controls"
             xmlns:ui="http://schemas.modernwpf.com/2019"
             mc:Ignorable="d" ui:ThemeManager.RequestedTheme="Dark" 
             d:DesignHeight="450" d:DesignWidth="800"
             Loaded="VariableList_OnLoaded"
             Unloaded="VariableList_OnUnloaded">
    <Grid>
        <Grid.Resources>
            <ResourceDictionary>
                <ResourceDictionary.MergedDictionaries>
                    <ResourceDictionary Source="/Resources/ColorList.xaml" />
                </ResourceDictionary.MergedDictionaries>
            </ResourceDictionary>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="60*"></ColumnDefinition>
            <ColumnDefinition Width="40*"></ColumnDefinition>
        </Grid.ColumnDefinitions>

        <StackPanel Grid.Row="0" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Right">
            <Grid Margin="0,10,5,10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Label Grid.Column="0" Padding="5,5,10,0">Filter:</Label>
                <local:SearchBox x:Name="TextFilter" Grid.Column="1" Width="200"
                                 TextChanged="TextFilter_TextChanged"
                                 FontSize="14">
                </local:SearchBox>
            </Grid>
        </StackPanel>

        <DataGrid x:Name="DataList" x:FieldModifier="public"
                  Grid.Column="0"
                  Grid.Row="1"
                  HeadersVisibility="Column"
                  Margin="5,0,5,5"
                  CanUserAddRows="True"
                  CanUserDeleteRows="True"
                  AutoGenerateColumns="False"
                  EnableColumnVirtualization="True"
                  SelectionMode="Single"
                  EnableRowVirtualization="True"
                  VirtualizingStackPanel.IsVirtualizing="True"
                  VirtualizingPanel.VirtualizationMode="Recycling"
                  SelectionChanged="DataList_OnSelectionChanged">
            <DataGrid.Resources>
                <ResourceDictionary>
                    <ResourceDictionary.MergedDictionaries>
                        <ResourceDictionary Source="/Resources/DataGridReadOnly.xaml" />
                    </ResourceDictionary.MergedDictionaries>
                    <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource DataGridRowStyle}" />
                </ResourceDictionary>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTextColumn Width="175" Binding="{Binding Key,UpdateSourceTrigger=PropertyChanged}"
                                    CellStyle="{StaticResource DataGridCellPrimaryWithEllipsis}" IsReadOnly="True" Visibility="Visible">
                    <DataGridTextColumn.Header>
                        <TextBlock Text="Key"/>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>

                <DataGridTextColumn Width="200" Binding="{Binding Value,UpdateSourceTrigger=PropertyChanged}"
                                    CellStyle="{StaticResource DataGridCellPrimaryWithEllipsis}" IsReadOnly="True" Visibility="Visible">
                    <DataGridTextColumn.Header>
                        <TextBlock Text="Value"/>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>

                <DataGridCheckBoxColumn Width="60" Header="Visible"
                                        Binding="{Binding IsVisible,UpdateSourceTrigger=PropertyChanged}">
                    <DataGridCheckBoxColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="IsEnabled" Value="False" />
                        </Style>
                    </DataGridCheckBoxColumn.CellStyle>
                    <DataGridCheckBoxColumn.ElementStyle>
                        <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}" />
                    </DataGridCheckBoxColumn.ElementStyle>
                </DataGridCheckBoxColumn>

                <DataGridTextColumn Binding="{Binding DisplayOrder,UpdateSourceTrigger=PropertyChanged}" 
                                    CellStyle="{StaticResource DataGridCellSecondaryWithEllipsis}"
                                    Width="70">
                    <DataGridTextColumn.Header>
                        <TextBlock Text="Order" />
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>

        <DockPanel Grid.Row="1" Grid.Column="1">
            <ui:SimpleStackPanel Orientation="Vertical" DockPanel.Dock="Top">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                    </Grid.ColumnDefinitions>

                    <ui:SimpleStackPanel Grid.Row="0" Grid.Column="0" Orientation="Vertical" Margin="0,0,0,0">
                        <TextBlock FontSize="14" Foreground="White" Margin="0,0,0,0">Key:</TextBlock>
                        <TextBox ui:ControlHelper.CornerRadius="0" Margin="0,5,0,0" x:Name="TextKey"
                             Text="{Binding Key,UpdateSourceTrigger=PropertyChanged}">
                        </TextBox>
                    </ui:SimpleStackPanel>

                    <ui:SimpleStackPanel Grid.Row="0" Grid.Column="1"  Orientation="Vertical" Margin="5,0,0,0">
                        <TextBlock FontSize="14" Foreground="White" Margin="0,0,0,0">Display Label:</TextBlock>
                        <TextBox ui:ControlHelper.CornerRadius="0" Margin="0,5,0,0" x:Name="TextLabel"
                             Text="{Binding Label,UpdateSourceTrigger=PropertyChanged}">
                        </TextBox>
                    </ui:SimpleStackPanel>
                </Grid>

                <TextBlock FontSize="14" Foreground="White" Margin="0,10,0,0">Value:</TextBlock>
                <TextBox ui:ControlHelper.CornerRadius="0" Margin="0,5,0,0" x:Name="TextValue"
                     Text="{Binding Value,UpdateSourceTrigger=PropertyChanged}">
                </TextBox>

                <Grid Margin="0,5,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                    </Grid.ColumnDefinitions>

                    <ui:SimpleStackPanel Grid.Row="0" Grid.Column="0" Orientation="Vertical" Margin="0,0,0,0">
                        <TextBlock FontSize="14" Foreground="White" Margin="0,0,0,0">Display Order:</TextBlock>

                        <ui:NumberBox x:Name="TextOrder" 
                                  Text="{Binding DisplayOrder,UpdateSourceTrigger=PropertyChanged}"
                                  ui:ControlHelper.CornerRadius="0" SmallChange="1" LargeChange="10" Margin="0,5,0,0" 
                                  SpinButtonPlacementMode="Inline" PreviewTextInput="TextPriority_PreviewTextInput"></ui:NumberBox>

                    </ui:SimpleStackPanel>

                    <ui:SimpleStackPanel Grid.Row="0" Grid.Column="1" Orientation="Vertical" Margin="5,0,0,0">
                        <TextBlock FontSize="14" Foreground="White" Margin="0,0,0,0">Foreground Color:</TextBlock>
                        <ComboBox ui:ControlHelper.CornerRadius="0" Margin="0,5,0,0" HorizontalAlignment="Stretch"
                              SelectedItem="{Binding ForegroundColor,UpdateSourceTrigger=PropertyChanged}"
                              ItemsSource="{StaticResource ColorList}"></ComboBox>
                    </ui:SimpleStackPanel>
                </Grid>

                <CheckBox IsChecked="{Binding IsVisible,UpdateSourceTrigger=PropertyChanged}" Margin="0,5,0,0">
                    <TextBlock Text="Visible in Variable Repeater" FontSize="14" Foreground="White"></TextBlock>
                </CheckBox>

                <TextBlock Text="OnChange Event: (Lua must have save explicitly clicked)" Foreground="White" FontSize="14" Margin="0,5,0,0"></TextBlock>

            </ui:SimpleStackPanel>

            <local:AvalonLuaEditor DockPanel.Dock="Bottom" x:Name="LuaEditor" InfoButtonVisibility="Collapsed" />
        </DockPanel>

    </Grid>
</UserControl>    