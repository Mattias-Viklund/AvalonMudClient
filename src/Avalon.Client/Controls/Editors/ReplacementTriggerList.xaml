<local:ReplacementTriggerListBase x:Class="Avalon.Controls.ReplacementTriggerList"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Avalon.Controls"
             xmlns:ui="http://schemas.modernwpf.com/2019"
             xmlns:editors="clr-namespace:Avalon.Controls.AutoCompleteTextBox.Editors"
             mc:Ignorable="d" ui:ThemeManager.RequestedTheme="Dark" 
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Right">
            <Grid Margin="0,10,5,10">
                <Label Grid.Column="0" Padding="5,5,10,0">Filter:</Label>
                <local:SearchBox x:Name="TextFilter" Width="200" FontSize="14" />
            </Grid>
        </StackPanel>

        <DockPanel Grid.Row="1" Grid.Column="0">
            <!-- Main List -->
            <DataGrid x:Name="DataList" x:FieldModifier="public" DockPanel.Dock="Top"
                      HeadersVisibility="Column"
                      MaxHeight="250"
                      Margin="5,0,5,5"
                      CanUserAddRows="True"
                      CanUserDeleteRows="True"
                      AutoGenerateColumns="False"
                      EnableColumnVirtualization="True"
                      SelectionMode="Single"
                      EnableRowVirtualization="True"
                      VirtualizingStackPanel.IsVirtualizing="True"
                      VirtualizingPanel.VirtualizationMode="Recycling"
                      SelectionChanged="DataList_OnSelectionChanged">
                <DataGrid.Resources>
                    <ResourceDictionary>
                        <ResourceDictionary.MergedDictionaries>
                            <ResourceDictionary Source="/Resources/DataGridReadOnly.xaml" />
                        </ResourceDictionary.MergedDictionaries>
                        <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource DataGridRowStyle}" />
                    </ResourceDictionary>
                </DataGrid.Resources>
                <DataGrid.Columns>
                    <DataGridTextColumn Width="175" Binding="{Binding Pattern,UpdateSourceTrigger=PropertyChanged}"
                                    CellStyle="{StaticResource DataGridCellPrimaryWithEllipsis}" IsReadOnly="True" Visibility="Visible">
                        <DataGridTextColumn.Header>
                            <TextBlock Text="Pattern"/>
                        </DataGridTextColumn.Header>
                    </DataGridTextColumn>

                    <DataGridTextColumn Width="200" Binding="{Binding Replacement,UpdateSourceTrigger=PropertyChanged}"
                                    CellStyle="{StaticResource DataGridCellPrimaryWithEllipsis}" IsReadOnly="True" Visibility="Visible">
                        <DataGridTextColumn.Header>
                            <TextBlock Text="Replacement"/>
                        </DataGridTextColumn.Header>
                    </DataGridTextColumn>

                    <DataGridCheckBoxColumn Width="60" Header="Enabled"
                                        Binding="{Binding Enabled,UpdateSourceTrigger=PropertyChanged}">
                        <DataGridCheckBoxColumn.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Setter Property="IsEnabled" Value="False" />
                            </Style>
                        </DataGridCheckBoxColumn.CellStyle>
                        <DataGridCheckBoxColumn.ElementStyle>
                            <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}" />
                        </DataGridCheckBoxColumn.ElementStyle>
                    </DataGridCheckBoxColumn>

                    <DataGridTextColumn Binding="{Binding Group,UpdateSourceTrigger=PropertyChanged}" 
                                    CellStyle="{StaticResource DataGridCellSecondaryWithEllipsis}"
                                    Width="70">
                        <DataGridTextColumn.Header>
                            <TextBlock Text="Group" />
                        </DataGridTextColumn.Header>
                    </DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>

            <!-- Detail -->
            <DockPanel DockPanel.Dock="Bottom">
                <ui:SimpleStackPanel Orientation="Vertical" DockPanel.Dock="Top">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition></ColumnDefinition>
                            <ColumnDefinition></ColumnDefinition>
                        </Grid.ColumnDefinitions>

                        <ui:SimpleStackPanel Grid.Row="0" Grid.Column="0" Orientation="Vertical" Margin="0,0,0,0">
                            <TextBlock FontSize="14" Foreground="White" Margin="0,0,0,0">Pattern:</TextBlock>
                            <editors:EditorTextBox ui:ControlHelper.CornerRadius="0" Margin="0,5,0,0"
                             Text="{Binding Pattern,UpdateSourceTrigger=PropertyChanged}" x:Name="TextPattern">
                            </editors:EditorTextBox>
                        </ui:SimpleStackPanel>

                        <ui:SimpleStackPanel Grid.Row="0" Grid.Column="1"  Orientation="Vertical" Margin="5,0,0,0">
                            <TextBlock FontSize="14" Foreground="White" Margin="0,0,0,0">Replacement:</TextBlock>
                            <editors:EditorTextBox BorderThickness="1" ui:ControlHelper.CornerRadius="0" Margin="0,5,0,0"
                                               Text="{Binding Replacement,UpdateSourceTrigger=PropertyChanged}">
                            </editors:EditorTextBox>
                        </ui:SimpleStackPanel>
                    </Grid>

                    <TextBlock FontSize="14" Foreground="White" Margin="0,10,0,0">Group:</TextBlock>
                    <editors:EditorTextBox ui:ControlHelper.CornerRadius="0" Margin="0,5,0,0"
                     Text="{Binding Group,UpdateSourceTrigger=PropertyChanged}">
                    </editors:EditorTextBox>

                    <ui:SimpleStackPanel Orientation="Horizontal">
                        <CheckBox IsChecked="{Binding Enabled,UpdateSourceTrigger=PropertyChanged}" Margin="0,5,0,0">
                            <TextBlock Text="Enabled" FontSize="14" Foreground="White"></TextBlock>
                        </CheckBox>

                        <CheckBox IsChecked="{Binding Temp,UpdateSourceTrigger=PropertyChanged}" Margin="0,5,0,0">
                            <TextBlock Text="Temp" FontSize="14" Foreground="White" ToolTip="Replacement will not save with the profile if it is set as Temp"></TextBlock>
                        </CheckBox>
                    </ui:SimpleStackPanel>

                    <TextBlock Text="OnMatch Event: (Lua must have save explicitly clicked)" Foreground="White" FontSize="14" Margin="0,5,0,0"></TextBlock>

                </ui:SimpleStackPanel>

                <local:AvalonLuaEditor DockPanel.Dock="Bottom" x:Name="LuaEditor" HorizontalAlignment="Stretch" InfoButtonVisibility="Collapsed" />
            </DockPanel>

        </DockPanel>
    </Grid>
</local:ReplacementTriggerListBase>    